docker pull postgres:latest
도커 설치 버전은 맞는 걸로하면 된다. 지금은 17.2로 사용한다.

docker run -p 5432:5432 --name sr-postgres -e POSTGRES_PASSWORD=qwer1234 -e TZ=Asia/Seoul -v /home/user/pgdata:/var/lib/postgresql/data -d postgres:17.2

-v /home/user/pgdata:/var/lib/postgresql/data 이 부분은 로컬컴퓨터 경로로 변경해야한다.


docker run -p 5432:5432 --name postgresDb -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=qwer1234 -e TZ=Asia/Seoul -v /d/DB/pgdata:/var/lib/postgresql/data -d postgres:17.2 
난 이걸로 변경했다.
그후 실행
- 도커로 postgres들어가고
docker exec -it postgresDb psql -U postgres
- 유저 생성
CREATE USER limited_user WITH PASSWORD 'limited_password';
- 데이터 베이스 생성
CREATE DATABASE limited_db OWNER limited_user;


pgadmin4와 연결
-- postgresql도 도커로 실행중인걸 가정한다.

1. pgadmin4 컨테이너 실행 // 이메일이랑 비밀번호는 원하는걸로 
docker run -d --name pgadmin4 -e 'PGADMIN_DEFAULT_EMAIL=yy4338@gmail.com' -e 'PGADMIN_DEFAULT_PASSWORD=ehzjtlfgdj' -p 8080:80 dpage/pgadmin4
도커싫어

2.  컨테이너를 동일 네트워크에 연결
2.1
 네트워크 생성
 docker network create pgnetwork
2.2
 postgresSql 컨테이너를 네트워크에 연결
 docker network connect pgnetwork postgresDb
2.3
 pgAdmin 컨테이너를 네트워크에 연결
 docker network connect pgnetwork pgadmin4

4. pgAdmin4에서 postgreSql 서버 추가
  4.1 브라우저에서 http://localhost:8080 접속.

  4.2 pgAdmin 4에 로그인 (admin@example.com / adminpassword).

  4.3 왼쪽 상단의 "Add New Server" 클릭.

  4.4 Connection 탭에서 아래 정보를 입력:
  Host: postgresDb (컨테이너 이름)
  Port: 5432
  Username: postgresDb (PostgreSQL 컨테이너의 POSTGRES_USER)
  Password: qwer1234 (PostgreSQL 컨테이너의 POSTGRES_PASSWORD)

 4.5 "Save"를 클릭하여 연결 확인.

5. 연결확인
 5.1 pgAdmin 4에서 서버 상태가 녹색으로 표시되면 연결 성공입니다.
 5.2 데이터베이스를 탐색하고 쿼리를 실행할 수 있습니다.


 6. 혹시 생성된 계정이 데이터베이스의 권한이 없이 들어갈 경우
 GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO your_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO your_user;
